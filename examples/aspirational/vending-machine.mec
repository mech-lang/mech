Vending Machine Simulation
============================

1. Model
----------

Define types.

<Button> := Coffee | Tea | Cancel.
<Control> := Vend<u8,u8> | Refund<$>.
#vending-machine := [
  coffee<u8> = 10,
  tea<u8> = 10,
  credit<$> = $0.00,
  cash<$> = $10.00,
].

2. Controller
---------------

We implement a state machine, which dictates how the #vending-machine changes state after each button press.

#vending-machine(self, <Button>)
  ([>0,_, >= $1,_], Coffee) => #vend-coffee()
                                 Ok(_) => ([-=1, _, $0, +=$1], Waiting)
                                 Err(_) => (_, Waiting)
  ([>0,_, >= $2,_], Tea) => #vend-tea()
                              Ok(_) => ([_, -=1, $0, +=$2], Waiting)
                              Err(_) => (_, Waiting)
  ([ 0,_, _    ,_], Coffe) | 
  ([_ ,0, _    ,_], Tea) => io/out("Out of stock")
  ([_ ,_, < $1 ,_], Coffee) |
  ([_ ,_, < $2 ,_], Tea) => io/out("Insufficient Credit")
  ([_ ,_, credit,_], Cancel) => #refund-credit(Refund(credit)) => ([_, _, $0, _], Waiting)
  _ => _

#vend-coffee() => #vend(Vending, 0x01, $1)
#vend-tea() => #vend(Vending, 0x02, $2)

#vend(<control>,<u8>,<$>) -> Result<>
  (Vending, data, _) => #vending-controller(mode: 0x01, data: data) 
                          Ok(_) => (Success,_,_)
                          Err(msg) => io/out(msg) => (Fail,_,_)
  (Success, _, price) -> 
  (Fail, _, _) => #refund-credit(Refund(m.credit)).

#refund-credit(Control) -> Result<>
  Refund(credit) => controller(mode: 0x02, data: credit) => 10<s> => Fail
  Success        -> [Waiting,_,_,$0.00,_].
  Fail           => io/out("Refund Failed.") -> Err().

3. Interface
--------------

We'll use the keyboard to control the vending machine for now.

#press-vend-button(<key>) -> <button>
  q -> Coffee
  a -> Tea
  z -> Cancel
  c => q
  t => a
  _ -> None

#insert-cash(<key>) -> <$>
  w -> $0.25
  s -> $1.00
  _ -> $0.00

4. Let's Goooooo!
-------------------

Invoke the vending machine state machine after each button press.
k = #io/keyboard()
m = #vending-machine()

Composing state machines
#press-vend-button(k.key) => m
#insert-cash(k.key) => m