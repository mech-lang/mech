math/sub_assign
===============================================================================

%% In-place subtraction assignment

1. Usage
-------------------------------------------------------------------------------

```mech:disabled
X -= Y
```

2. Description
-------------------------------------------------------------------------------

Performs elementwise in-place subtraction, modifying the left-hand operand:

$$ x \mathrel{-}= y \quad \Rightarrow \quad x = x - y

Supports scalars, vectors, and matrices across integers, floating-point, rational, and complex types.  
Range-based subtraction is also supported for partial updates (e.g., specific rows, columns, or slices).

3. Input
-------------------------------------------------------------------------------

| Argument | Kind             | Description |
|----------|------------------|-------------|
| `X`      | numeric / array  | The target value to update in place. |
| `Y`      | numeric / array  | The value(s) to subtract from `X`. |

4. Output
-------------------------------------------------------------------------------

- Updates `X` in place.  
- Returns no new value (effect is assignment).

5. Examples  
-------------------------------------------------------------------------------

(a) Scalar values

```mech:ex1
x := 10
x -= 3                
```

(b) Vector subtraction

```mech:ex2
x := [10, 20, 30]
y := [1, 2, 3]
x -= y                 
```

(c) Matrix subtraction

```mech:ex3
x := [10, 20; 30, 40]
y := [1, 2; 3, 4]
x -= y                
```

(d) Partial subtraction by range

```mech:ex4
x := [10, 20, 30, 40]
x[2..3] -= 5           
```

6. Details
-------------------------------------------------------------------------------

- **Definition:** $$ X := X - Y $$  
- **Supported types:** unsigned integers (`u8..u128`), signed integers (`i8..i64`), floats (`f32`, `f64`), rationals, complex numbers.  
- **Shapes:** Scalars, vectors, and matrices. Broadcasting applies where implemented.  
- **Range updates:** Macros support 1D and 2D indexed assignment, including boolean masks.  
- **Errors:** Mismatched shapes or unsupported types raise an error.

7. Notes for Implementers
-------------------------------------------------------------------------------

- Generated by `impl_assign_scalar_scalar!(Sub, -=)` and `impl_assign_vector_vector!(Sub, -=)` macros.  
- Range handling uses specialized macros for 1D and 2D slice updates.  
- Type dispatch is handled by `impl_sub_assign_match_arms!`.

8. See also
-------------------------------------------------------------------------------

`math/add_assign`, `math/mul_assign`, `math/div_assign`
