Mech Programming Language Documentation
===============================================================================

1. Getting Started
-------------------------------------------------------------------------------

1. [Introduction](getting-started/introduction.html)
2. [Install Mech](getting-started/install.html)
3. [Build and Run Mech Programs](getting-started/build-and-run.html)
4. [Mech REPL](getting-started/repl.html) 

2. Language Reference
-------------------------------------------------------------------------------

1. Data Model
    - [Data Types and Kinds](reference/values.html)
    - Data Structures
        - [Enum](reference/enum.html) - defines a set of named constant values
        - [Map](reference/map.html) - stores key-value pairs for fast lookups.
        - [Matrix](reference/matrix.html) - 2D array of homogenous values arranged in rows and columns.
        - [Record](reference/record.html) - groups related fields, usually for representing structured data.
        - [Set](reference/set.html) - unordered collection of unique values
        - [Table](reference/table.html) - collection of heterogeneous data organized into rows and columns.
        - [Tuple](reference/tuple.html) - fixed-size, ordered grouping of heterogeneous values.
    - Operators and Expressions
        - Operators
        - Indexing
2. Programming Model `Coming v0.3`
    - Functions
    - State Machines
    - Machines
    - Mech Programs
3. System Model `Coming v0.4`
    - Capabilities
    - Distributed Computation
    - Concurrency and Parallelism
4. Mechdown Reference

3. Standard Library
-------------------------------------------------------------------------------

- Assign
- Access
- Combinatorics
- Compare
- Convert
- Io
- Logic
- [Math](stdlib/math/index.html)
- Matrix
- Range
- Stats

4. Guides
-------------------------------------------------------------------------------

1. [Mech in Fifteen Minutes](guides/mech-in-fifteen-minutes.html)
2. Tutorials

5. Language Design Documents
-------------------------------------------------------------------------------

1. [Language Specification](design/specification.html)
2. Language Design Principles
3. Syntax Design Notes
4. [History](design/history.html)
5. [Roadmap](design/roadmap.html)

6. Examples
-------------------------------------------------------------------------------

1. [Fizz Buzz](examples/fizzbuzz.html) - a classic programming exercise that demonstrates the use of Mech's data model and operators.
2. [N-Body Simulation](examples/n-body.html) - a simulation of gravitational interactions between multiple bodies.
3. [Extended Kalman Filter](examples/ekf.html) - an implementation of the Extended Kalman Filter algorithm for state estimation.

docs/machine := {
  name: "docs" 
  version: "v0.2.59"
  authors: ["Corey Montella"] 
  machine-url: "https://gitlab.com/mech-lang/mech/docs"
  license: "Apache-2.0"}