Mech Programming Language Documentation
===============================================================================

1. Getting Started
-------------------------------------------------------------------------------

1. [Introduction](I.getting-started/introduction.html)
2. [Install Mech](I.getting-started/install.html)
3. [Build and Run Mech Programs](I.getting-started/build-and-run.html)
4. [Mech REPL](I.getting-started/repl.html) 

2. Language Reference
-------------------------------------------------------------------------------

1. Data Model
    - [Data Types and Kinds](II.reference/values.html)
    - Data Structures
        - Enum - enumeration of named values `Coming v0.3`
        - Map - key-value store
        - [Matrix](II.reference/matrix.html) - 2D collection of values
        - Record - collection of named values
        - Set - unordered collection of unique values
        - [Table](II.reference/table.html) - collection of Records
        - Tuple - ordered collection of values
    - Operators and Expressions
        - Operators
        - Indexing
2. Programming Model `Coming v0.3`
    - Functions
    - State Machines
    - Machines
    - Mech Programs
3. System Model `Coming v0.4`
    - Capabilities
    - Distributed Computation
    - Concurrency and Parallelism
4. [Standard Library](II.reference/stdlib/index.html)
5. Mechdown Reference

3. Guides
-------------------------------------------------------------------------------

1. [Mech in Fifteen Minutes](III.guides/mech-in-fifteen-minutes.html)
2. Tutorials

4. Language Design Documents
-------------------------------------------------------------------------------

1. [Language Specification](IV.design/specification.html)
2. Language Design Principles
3. Syntax Design Notes
4. History
5. [Roadmap](IV.design/roadmap.html)

5. Examples
-------------------------------------------------------------------------------

1. [Fizz Buzz](V.examples/fizzbuzz.html) - a classic programming exercise that demonstrates the use of Mech's data model and operators.
2. [N-Body Simulation](V.examples/n-body.html) - a simulation of gravitational interactions between multiple bodies.
3. [Extended Kalman Filter](V.examples/ekf.html) - an implementation of the Extended Kalman Filter algorithm for state estimation.

docs/machine := {
  name: "docs" 
  version: "v0.2.58"
  authors: ["Corey Montella"] 
  machine-url: "https://gitlab.com/mech-lang/mech/docs"
  license: "Apache-2.0"}