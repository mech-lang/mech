Math Unit Tests
================

Scalar : Scalar
----------------

Test scalar math with f32
  #test += ["Add Scalar:Scalar f32"  2  1 + 1 
            "Sub Scalar:Scalar f32"  2  4 - 2
            "Div Scalar:Scalar f32"  2  4 / 2
            "Mul Scalar:Scalar f32"  6  2 * 3 
            "Exp Scalar:Scalar f32"  9  3 ^ 2]

Test scalar math with f64
  #test += ["Add Scalar:Scalar f64"  3<f64>  2<f64> + 1<f64> 
            "Sub Scalar:Scalar f64"  2<f64>  4<f64> - 2<f64>
            "Div Scalar:Scalar f64"  2<f64>  4<f64> / 2<f64>
            "Mul Scalar:Scalar f64"  6<f64>  2<f64> * 3<f64>]

Test scalar math with u16
  #test += ["Add Scalar:Scalar u16"  3<u16>  2<u16> + 1<u16> 
            "Sub Scalar:Scalar u16"  2<u16>  4<u16> - 2<u16>
            "Div Scalar:Scalar u16"  2<u16>  4<u16> / 2<u16>
            "Mul Scalar:Scalar u16"  6<u16>  2<u16> * 3<u16>]

Test scalar math with u32
  #test += ["Add Scalar:Scalar u32"  3<u32>  2<u32> + 1<u32> 
            "Sub Scalar:Scalar u32"  2<u32>  4<u32> - 2<u32>
            "Div Scalar:Scalar u32"  2<u32>  4<u32> / 2<u32>
            "Mul Scalar:Scalar u32"  6<u32>  2<u32> * 3<u32>]

Test scalar math with u64
  #test += ["Add Scalar:Scalar u64"  3<u64>  2<u64> + 1<u64>
            "Sub Scalar:Scalar u64"  2<u64>  4<u64> - 2<u64>
            "Div Scalar:Scalar u64"  2<u64>  4<u64> / 2<u64>
            "Mul Scalar:Scalar u64"  6<u64>  2<u64> * 3<u64>]

Test scalar math with u128
  #test += ["Add Scalar:Scalar u128"  3<u128>  2<u128> + 1<u128>
            "Sub Scalar:Scalar u128"  2<u128>  4<u128> - 2<u128>
            "Div Scalar:Scalar u128"  2<u128>  4<u128> / 2<u128>
            "Mul Scalar:Scalar u128"  6<u128>  2<u128> * 3<u128>]

Test scalar math with i8
  #test += ["Add Scalar:Scalar i8"  3<i8>  2<i8> + 1<i8>
            "Sub Scalar:Scalar i8"  2<i8>  4<i8> - 2<i8>
            "Div Scalar:Scalar i8"  2<i8>  4<i8> / 2<i8>
            "Mul Scalar:Scalar i8"  6<i8>  2<i8> * 3<i8>]
            
Test scalar math with i16
  #test += ["Add Scalar:Scalar i16"  3<i16>  2<i16> + 1<i16>
            "Sub Scalar:Scalar i16"  2<i16>  4<i16> - 2<i16>
            "Div Scalar:Scalar i16"  2<i16>  4<i16> / 2<i16>
            "Mul Scalar:Scalar i16"  6<i16>  2<i16> * 3<i16>]

Test scalar math with i32
  #test += ["Add Scalar:Scalar i32"  3<i32>  2<i32> + 1<i32>
            "Sub Scalar:Scalar i32"  2<i32>  4<i32> - 2<i32>
            "Div Scalar:Scalar i32"  2<i32>  4<i32> / 2<i32>
            "Mul Scalar:Scalar i32"  6<i32>  2<i32> * 3<i32>]

Test scalar math with i64
  #test += ["Add Scalar:Scalar i64"  3<i64>  2<i64> + 1<i64>
            "Sub Scalar:Scalar i64"  2<i64>  4<i64> - 2<i64>
            "Div Scalar:Scalar i64"  2<i64>  4<i64> / 2<i64>
            "Mul Scalar:Scalar i64"  6<i64>  2<i64> * 3<i64>]

Test scalar math with i128
  #test += ["Add Scalar:Scalar i128"  3<i128>  2<i128> + 1<i128>
            "Sub Scalar:Scalar i128"  2<i128>  4<i128> - 2<i128>
            "Div Scalar:Scalar i128"  2<i128>  4<i128> / 2<i128>
            "Mul Scalar:Scalar i128"  6<i128>  2<i128> * 3<i128>]

Column : Column
----------------
Test column math with u8
  x = [1<u8>; 2<u8>; 3<u8>]
  y = [4<u8>; 5<u8>; 6<u8>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u8" 21<u8>  sum-result
            "Mul Column:Column u8" 32<u8>  mul-result
            "Sub Column:Column u8" 9<u8>  sub-result
            "Div Column:Column u8" 8<u8>  div-result]

Test column math with u16
  x = [1<u16>; 2<u16>; 3<u16>]
  y = [4<u16>; 5<u16>; 6<u16>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u16" 21<u16>  sum-result
            "Mul Column:Column u16" 32<u16>  mul-result
            "Sub Column:Column u16" 9<u16>  sub-result
            "Div Column:Column u16" 8<u16>  div-result]

Test column math with u32
  x = [1<u32>; 2<u32>; 3<u32>]
  y = [4<u32>; 5<u32>; 6<u32>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u32" 21<u32>  sum-result
            "Mul Column:Column u32" 32<u32>  mul-result
            "Sub Column:Column u32" 9<u32>  sub-result
            "Div Column:Column u32" 8<u32>  div-result]

Test column math with u64
  x = [1<u64>; 2<u64>; 3<u64>]
  y = [4<u64>; 5<u64>; 6<u64>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u64" 21<u64>  sum-result
            "Mul Column:Column u64" 32<u64>  mul-result
            "Sub Column:Column u64" 9<u64>  sub-result
            "Div Column:Column u64" 8<u64>  div-result]

Test column math with u128
  x = [1<u128>; 2<u128>; 3<u128>]
  y = [4<u128>; 5<u128>; 6<u128>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u128" 21<u128>  sum-result
            "Mul Column:Column u128" 32<u128>  mul-result
            "Sub Column:Column u128" 9<u128>  sub-result
            "Div Column:Column u128" 8<u128>  div-result]

Test column math with i8
  x = [1<i8>; 2<i8>; 3<i8>]
  y = [4<i8>; 5<i8>; 6<i8>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u8" 21<i8>  sum-result
            "Mul Column:Column u8" 32<i8>  mul-result
            "Sub Column:Column u8" 9<i8>  sub-result
            "Div Column:Column u8" 8<i8>  div-result]

Test column math with i16
  x = [1<i16>; 2<i16>; 3<i16>]
  y = [4<i16>; 5<i16>; 6<i16>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u16" 21<i16>  sum-result
            "Mul Column:Column u16" 32<i16>  mul-result
            "Sub Column:Column u16" 9<i16>  sub-result
            "Div Column:Column u16" 8<i16>  div-result]

Test column math with i32
  x = [1<i32>; 2<i32>; 3<i32>]
  y = [4<i32>; 5<i32>; 6<i32>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u32" 21<i32>  sum-result
            "Mul Column:Column u32" 32<i32>  mul-result
            "Sub Column:Column u32" 9<i32>  sub-result
            "Div Column:Column u32" 8<i32>  div-result]

Test column math with i64
  x = [1<i64>; 2<i64>; 3<i64>]
  y = [4<i64>; 5<i64>; 6<i64>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u64" 21<i64>  sum-result
            "Mul Column:Column u64" 32<i64>  mul-result
            "Sub Column:Column u64" 9<i64>  sub-result
            "Div Column:Column u64" 8<i64>  div-result]

Test column math with i128
  x = [1<i128>; 2<i128>; 3<i128>]
  y = [4<i128>; 5<i128>; 6<i128>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column u128" 21<i128>  sum-result
            "Mul Column:Column u128" 32<i128>  mul-result
            "Sub Column:Column u128" 9<i128>  sub-result
            "Div Column:Column i128" 8<i128>  div-result]

Test column math with f32
  x = [1<f32>; 2<f32>; 3<f32>]
  y = [4<f32>; 5<f32>; 6<f32>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column f32" 21<f32>  sum-result
            "Mul Column:Column f32" 32<f32>  mul-result
            "Sub Column:Column f32" 9<f32>  sub-result
            "Div Column:Column f32" 8.5<f32>  div-result]

Test column math with f64
  x = [1<f64>; 2<f64>; 3<f64>]
  y = [4<f64>; 5<f64>; 6<f64>]
  sum-result = stats/sum(column: x + y)
  mul-result = stats/sum(column: x * y)
  sub-result = stats/sum(column: y - x)
  div-result = stats/sum(column: y / x)
  #test += ["Add Column:Column f64" 21<f64>  sum-result
            "Mul Column:Column f64" 32<f64>  mul-result
            "Sub Column:Column f64" 9<f64>  sub-result
            "Div Column:Column f64" 8.5<f64>  div-result]

Scalar : Row
----------------

Test row math with u8
  y = [4<u8> 5<u8> 6<u8>]
  sum-result = stats/sum(row: 4<u8> + y)
  mul-result = stats/sum(row: 4<u8> * y)
  sub-result = stats/sum(row: 10<u8> - y)
  #test += ["Add Scalar:Row u8"  27<u8>  sum-result
            "Mul Scalar:Row u8"  60<u8>  mul-result
            "Sub Scalar:Row u8"  15<u8>  sub-result]

Test row math with u16
  y = [4<u16> 5<u16> 6<u16>]
  sum-result = stats/sum(row: 4<u16> + y)
  mul-result = stats/sum(row: 4<u16> * y)
  sub-result = stats/sum(row: 10<u16> - y)
  #test += ["Add Scalar:Row u16"  27<u16>  sum-result
            "Mul Scalar:Row u16"  60<u16>  mul-result
            "Sub Scalar:Row u16"  15<u16>  sub-result]

Test row math with u32
  y = [4<u32> 5<u32> 6<u32>]
  sum-result = stats/sum(row: 4<u32> + y)
  mul-result = stats/sum(row: 4<u32> * y)
  sub-result = stats/sum(row: 10<u32> - y)
  #test += ["Add Scalar:Row u32"  27<u32>  sum-result
            "Mul Scalar:Row u32"  60<u32>  mul-result
            "Sub Scalar:Row u32"  15<u32>  sub-result]

Test row math with u64
  y = [4<u64> 5<u64> 6<u64>]
  sum-result = stats/sum(row: 4<u64> + y)
  mul-result = stats/sum(row: 4<u64> * y)
  sub-result = stats/sum(row: 10<u64> - y)
  #test += ["Add Scalar:Row u64"  27<u64>  sum-result
            "Mul Scalar:Row u64"  60<u64>  mul-result
            "Sub Scalar:Row u64"  15<u64>  sub-result]

Test row math with u128
  y = [4<u128> 5<u128> 6<u128>]
  sum-result = stats/sum(row: 4<u128> + y)
  mul-result = stats/sum(row: 4<u128> * y)
  sub-result = stats/sum(row: 10<u128> - y)
  #test += ["Add Scalar:Row u128" 27<u128>  sum-result
            "Mul Scalar:Row u128"  60<u128>  mul-result
            "Sub Scalar:Row u128"  15<u128>  sub-result]

Test row math with f32
  y = [4<f32> 5<f32> 6<f32>]
  sum-result = stats/sum(row: 4<f32> + y)
  mul-result = stats/sum(row: 4<f32> * y)
  sub-result = stats/sum(row: 4<f32> - y)
  #test += ["Add Scalar:Row f32" 27<f32>  sum-result
            "Mul Scalar:Row f32"  60<f32>  mul-result
            "Sub Scalar:Row f32"  -3<f32>  sub-result]

Test row math with f64
  y = [4<f64> 5<f64> 6<f64>]
  sum-result = stats/sum(row: 4<f64> + y)
  mul-result = stats/sum(row: 4<f64> * y)
  sub-result = stats/sum(row: 4<f64> - y)
  #test += ["Add Scalar:Row f64"  27<f64>  sum-result
            "Mul Scalar:Row f64"  60<f64>  mul-result
            "Sub Scalar:Row f64"  -3<f64>  sub-result]

Test row math with i8
  y = [4<i8> 5<i8> 6<i8>]
  sum-result = stats/sum(row: 4<i8> + y)
  mul-result = stats/sum(row: 4<i8> * y)
  sub-result = stats/sum(row: 4<i8> - y)
  #test += ["Add Scalar:Row i8"  27<i8>  sum-result
            "Mul Scalar:Row i8"  60<i8>  mul-result
            "Sub Scalar:Row i8"  -3<i8>  sub-result]

Test row math with i16
  y = [4<i16> 5<i16> 6<i16>]
  sum-result = stats/sum(row: 4<i16> + y)
  mul-result = stats/sum(row: 4<i16> * y)
  sub-result = stats/sum(row: 4<i16> - y)
  #test += ["Add Scalar:Row i16"  27<i16>  sum-result
            "Mul Scalar:Row i16"  60<i16>  mul-result
            "Sub Scalar:Row i16"  -3<i16>  sub-result]

Test row math with i32
  y = [4<i32> 5<i32> 6<i32>]
  sum-result = stats/sum(row: 4<i32> + y)
  mul-result = stats/sum(row: 4<i32> * y)
  sub-result = stats/sum(row: 4<i32> - y)
  #test += ["Add Scalar:Row i32"  27<i32>  sum-result
            "Mul Scalar:Row i32"  60<i32>  mul-result
            "Sub Scalar:Row i32"  -3<i32>  sub-result]

Test row math with i64
  y = [4<i64> 5<i64> 6<i64>]
  sum-result = stats/sum(row: 4<i64> + y)
  mul-result = stats/sum(row: 4<i64> * y)
  sub-result = stats/sum(row: 4<i64> - y)
  #test += ["Add Scalar:Row i64"  27<i64>  sum-result
            "Mul Scalar:Row i64"  60<i64>  mul-result
            "Sub Scalar:Row i64"  -3<i64>  sub-result]

Test row math with i128
  y = [4<i128> 5<i128> 6<i128>]
  sum-result = stats/sum(row: 4<i128> + y)
  mul-result = stats/sum(row: 4<i128> * y)
  sub-result = stats/sum(row: 4<i128> - y)
  #test += ["Add Scalar:Row i128"  27<i128>  sum-result
            "Mul Scalar:Row i128"  60<i128>  mul-result
            "Sub Scalar:Row i128"  -3<i128>  sub-result]
            
Row : Scalar
----------------

Test row math with u8
  y = [14<u8> 15<u8> 16<u8>]
  sum-result = stats/sum(row: y + 4<u8>)
  mul-result = stats/sum(row: y * 4<u8>)
  sub-result = stats/sum(row: y - 10<u8>)
  #test += ["Add Row:Scalar u8"  57<u8>  sum-result
            "Mul Row:Scalar u8"  180<u8>  mul-result
            "Sub Row:Scalar u8"  15<u8>  sub-result]

Test row math with u16
  y = [14<u16> 15<u16> 16<u16>]
  sum-result = stats/sum(row: y + 4<u16>)
  mul-result = stats/sum(row: y * 4<u16>)
  sub-result = stats/sum(row: y - 10<u16>)
  #test += ["Add Row:Scalar u16"  57<u16>  sum-result
            "Mul Row:Scalar u16"  180<u16>  mul-result
            "Sub Row:Scalar u16"  15<u16>  sub-result]
    
Test row math with u32
  y = [14<u32> 15<u32> 16<u32>]
  sum-result = stats/sum(row: y + 4<u32>)
  mul-result = stats/sum(row: y * 4<u32>)
  sub-result = stats/sum(row: y - 10<u32>)
  #test += ["Add Row:Scalar u32"  57<u32>  sum-result
            "Mul Row:Scalar u32"  180<u32>  mul-result
            "Sub Row:Scalar u32"  15<u32>  sub-result]

Test row math with u64
  y = [14<u64> 15<u64> 16<u64>]
  sum-result = stats/sum(row: y + 4<u64>)
  mul-result = stats/sum(row: y * 4<u64>)
  sub-result = stats/sum(row: y - 10<u64>)
  #test += ["Add Row:Scalar u64"  57<u64>  sum-result
            "Mul Row:Scalar u64"  180<u64>  mul-result
            "Sub Row:Scalar u64"  15<u64>  sub-result]

Test row math with u128
  y = [14<u128> 15<u128> 16<u128>]
  sum-result = stats/sum(row: y + 4<u128>)
  mul-result = stats/sum(row: y * 4<u128>)
  sub-result = stats/sum(row: y - 10<u128>)
  #test += ["Add Row:Scalar u128"  57<u128>  sum-result
            "Mul Row:Scalar u128"  180<u128>  mul-result
            "Sub Row:Scalar u128"  15<u128>  sub-result]

Test row math with i8

Test row math with i16
  y = [14<i16> 15<i16> 16<i16>]
  sum-result = stats/sum(row: y + 4<i16>)
  mul-result = stats/sum(row: y * 4<i16>)
  sub-result = stats/sum(row: y - 10<i16>)
  #test += ["Add Row:Scalar i16"  57<i16>  sum-result
            "Mul Row:Scalar i16"  180<i16>  mul-result
            "Sub Row:Scalar i16"  15<i16>  sub-result]

Test row math with i32
  y = [14<i32> 15<i32> 16<i32>]
  sum-result = stats/sum(row: y + 4<i32>)
  mul-result = stats/sum(row: y * 4<i32>)
  sub-result = stats/sum(row: y - 10<i32>)
  #test += ["Add Row:Scalar i32"  57<i32>  sum-result
            "Mul Row:Scalar i32"  180<i32>  mul-result
            "Sub Row:Scalar i32"  15<i32>  sub-result]

Test row math with i64
  y = [14<i64> 15<i64> 16<i64>]
  sum-result = stats/sum(row: y + 4<i64>)
  mul-result = stats/sum(row: y * 4<i64>)
  sub-result = stats/sum(row: y - 10<i64>)
  #test += ["Add Row:Scalar i64"  57<i64>  sum-result
            "Mul Row:Scalar i64"  180<i64>  mul-result
            "Sub Row:Scalar i64"  15<i64>  sub-result]

Test row math with i128
  y = [14<i128> 15<i128> 16<i128>]
  sum-result = stats/sum(row: y + 4<i128>)
  mul-result = stats/sum(row: y * 4<i128>)
  sub-result = stats/sum(row: y - 10<i128>)
  #test += ["Add Row:Scalar i128"  57<i128>  sum-result
            "Mul Row:Scalar i128"  180<i128>  mul-result
            "Sub Row:Scalar i128"  15<i128>  sub-result]

Test row math with f32
  y = [14<f32> 15<f32> 16<f32>]
  sum-result = stats/sum(row: y + 4<f32>)
  mul-result = stats/sum(row: y * 4<f32>)
  sub-result = stats/sum(row: y - 10<f32>)
  #test += ["Add Row:Scalar f32"  57<f32>  sum-result
            "Mul Row:Scalar f32"  180<f32>  mul-result
            "Sub Row:Scalar f32"  15<f32>  sub-result]
    
Test row math with f64
  y = [14<f64> 15<f64> 16<f64>]
  sum-result = stats/sum(row: y + 4<f64>)
  mul-result = stats/sum(row: y * 4<f64>)
  sub-result = stats/sum(row: y - 10<f64>)
  #test += ["Add Row:Scalar f64"  57<f64>  sum-result
            "Mul Row:Scalar f64"  180<f64>  mul-result
            "Sub Row:Scalar f64"  15<f64>  sub-result]


Scalar : Column
----------------

Test column math with u8
  y = [4<u8>; 5<u8>; 6<u8>]
  sum-result = stats/sum(column: 4<u8> + y)
  mul-result = stats/sum(column: 4<u8> * y)
  sub-result = stats/sum(column: 10<u8> - y)
  div-result = stats/sum(column: 120<u8> / y)
  #test += ["Add Scalar:Column u8"  27<u8>  sum-result
            "Mul Scalar:Column u8"  60<u8>  mul-result
            "Sub Scalar:Column u8"  15<u8>  sub-result
            "Div Scalar:Column u8"  74<u8>  div-result]

Test column math with u16
  y = [4<u16>; 5<u16>; 6<u16>]
  sum-result = stats/sum(column: 4<u16> + y)
  mul-result = stats/sum(column: 4<u16> * y)
  sub-result = stats/sum(column: 10<u16> - y)
  div-result = stats/sum(column: 120<u16> / y)
  #test += ["Add Scalar:Column u16"  27<u16>  sum-result
            "Mul Scalar:Column u16"  60<u16>  mul-result
            "Sub Scalar:Column u16"  15<u16>  sub-result
            "Div Scalar:Column u16"  74<u16>  div-result]

Test column math with u32
  y = [4<u32>; 5<u32>; 6<u32>]
  sum-result = stats/sum(column: 4<u32> + y)
  mul-result = stats/sum(column: 4<u32> * y)
  sub-result = stats/sum(column: 10<u32> - y)
  div-result = stats/sum(column: 120<u32> / y)
  #test += ["Add Scalar:Column u32"  27<u32>  sum-result
            "Mul Scalar:Column u32"  60<u32>  mul-result
            "Sub Scalar:Column u32"  15<u32>  sub-result
            "Div Scalar:Column u32"  74<u32>  div-result]

Test column math with u64
  y = [4<u64>; 5<u64>; 6<u64>]
  sum-result = stats/sum(column: 4<u64> + y)
  mul-result = stats/sum(column: 4<u64> * y)
  sub-result = stats/sum(column: 10<u64> - y)
  div-result = stats/sum(column: 120<u64> / y)
  #test += ["Add Scalar:Column u64"  27<u64>  sum-result
            "Mul Scalar:Column u64"  60<u64>  mul-result
            "Sub Scalar:Column u64"  15<u64>  sub-result
            "Div Scalar:Column u64"  74<u64>  div-result]

Test column math with u128
  y = [4<u128>; 5<u128>; 6<u128>]
  sum-result = stats/sum(column: 4<u128> + y)
  mul-result = stats/sum(column: 4<u128> * y)
  sub-result = stats/sum(column: 10<u128> - y)
  div-result = stats/sum(column: 120<u128> / y)
  #test += ["Add Scalar:Column u128"  27<u128>  sum-result
            "Mul Scalar:Column u128"  60<u128>  mul-result
            "Sub Scalar:Column u128"  15<u128>  sub-result
            "Div Scalar:Column u128"  74<u128>  div-result]

Test column math with f32
  y = [4<f32>; 5<f32>; 6<f32>]
  sum-result = stats/sum(column: 4<f32> + y)
  mul-result = stats/sum(column: 4<f32> * y)
  sub-result = stats/sum(column: 10<f32> - y)
  div-result = stats/sum(column: 120<f32> / y)
  #test += ["Add Scalar:Column f32"  27<f32>  sum-result
            "Mul Scalar:Column f32"  60<f32>  mul-result
            "Sub Scalar:Column f32"  15<f32>  sub-result
            "Div Scalar:Column f32"  74<f32>  div-result]

Test column math with f64
  y = [4<f64>; 5<f64>; 6<f64>]
  sum-result = stats/sum(column: 4<f64> + y)
  mul-result = stats/sum(column: 4<f64> * y)
  sub-result = stats/sum(column: 10<f64> - y)
  div-result = stats/sum(column: 120<f64> / y)
  #test += ["Add Scalar:Column f64"  27<f64>  sum-result
            "Mul Scalar:Column f64"  60<f64>  mul-result
            "Sub Scalar:Column f64"  15<f64>  sub-result
            "Div Scalar:Column f64"  74<f64>  div-result]

Test column math with i8
  y = [4<i8>; 5<i8>; 6<i8>]
  sum-result = stats/sum(column: 4<i8> + y)
  mul-result = stats/sum(column: 4<i8> * y)
  sub-result = stats/sum(column: 4<i8> - y)
  div-result = stats/sum(column: 120<i8> / y)
  #test += ["Add Scalar:Column i8"  27<i8>  sum-result
            "Mul Scalar:Column i8"  60<i8>  mul-result
            "Sub Scalar:Column i8"  -3<i8>  sub-result
            "Div Scalar:Column i8"  74<i8>  div-result]

Test column math with i16
  y = [4<i16>; 5<i16>; 6<i16>]
  sum-result = stats/sum(column: 4<i16> + y)
  mul-result = stats/sum(column: 4<i16> * y)
  sub-result = stats/sum(column: 4<i16> - y)
  div-result = stats/sum(column: 120<i16> / y)
  #test += ["Add Scalar:Column i16"  27<i16>  sum-result
            "Mul Scalar:Column i16"  60<i16>  mul-result
            "Sub Scalar:Column i16"  -3<i16>  sub-result
            "Div Scalar:Column i16"  74<i16>  div-result]

Test column math with i32
  y = [4<i32>; 5<i32>; 6<i32>]
  sum-result = stats/sum(column: 4<i32> + y)
  mul-result = stats/sum(column: 4<i32> * y)
  sub-result = stats/sum(column: 4<i32> - y)
  div-result = stats/sum(column: 120<i32> / y)
  #test += ["Add Scalar:Column i32"  27<i32>  sum-result
            "Mul Scalar:Column i32"  60<i32>  mul-result
            "Sub Scalar:Column i32"  -3<i32>  sub-result
            "Div Scalar:Column i32"  74<i32>  div-result]

Test column math with i64
  y = [4<i64>; 5<i64>; 6<i64>]
  sum-result = stats/sum(column: 4<i64> + y)
  mul-result = stats/sum(column: 4<i64> * y)
  sub-result = stats/sum(column: 4<i64> - y)
  div-result = stats/sum(column: 120<i64> / y)
  #test += ["Add Scalar:Column i64"  27<i64>  sum-result
            "Mul Scalar:Column i64"  60<i64>  mul-result
            "Sub Scalar:Column i64"  -3<i64>  sub-result
            "Div Scalar:Column i64"  74<i64>  div-result]

Test column math with i128
  y = [4<i128>; 5<i128>; 6<i128>]
  sum-result = stats/sum(column: 4<i128> + y)
  mul-result = stats/sum(column: 4<i128> * y)
  sub-result = stats/sum(column: 4<i128> - y)
  div-result = stats/sum(column: 120<i128> / y)
  #test += ["Add Scalar:Column i128"  27<i128>  sum-result
            "Mul Scalar:Column i128"  60<i128>  mul-result
            "Sub Scalar:Column i128"  -3<i128>  sub-result
            "Div Scalar:Column i128"  74<i128>  div-result]


Column : Scalar
----------------

Test column math with u8
  y = [14<u8>; 15<u8>; 16<u8>]
  sum-result = stats/sum(column: y + 4<u8>)
  mul-result = stats/sum(column: y * 4<u8>)
  sub-result = stats/sum(column: y - 10<u8>)
  #test += ["Add Column:Scalar u8"  57<u8>  sum-result
            "Mul Column:Scalar u8"  180<u8>  mul-result
            "Sub Column:Scalar u8"  15<u8>  sub-result]

Test column math with u16
  y = [14<u16>; 15<u16>; 16<u16>]
  sum-result = stats/sum(column: y + 4<u16>)
  mul-result = stats/sum(column: y * 4<u16>)
  sub-result = stats/sum(column: y - 10<u16>)
  #test += ["Add Column:Scalar u16"  57<u16>  sum-result
            "Mul Column:Scalar u16"  180<u16>  mul-result
            "Sub Column:Scalar u16"  15<u16>  sub-result]

Test column math with u32
  y = [14<u32>; 15<u32>; 16<u32>]
  sum-result = stats/sum(column: y + 4<u32>)
  mul-result = stats/sum(column: y * 4<u32>)
  sub-result = stats/sum(column: y - 10<u32>)
  #test += ["Add Column:Scalar u32"  57<u32>  sum-result
            "Mul Column:Scalar u32"  180<u32>  mul-result
            "Sub Column:Scalar u32"  15<u32>  sub-result]

Test column math with u64
  y = [14<u64>; 15<u64>; 16<u64>]
  sum-result = stats/sum(column: y + 4<u64>)
  mul-result = stats/sum(column: y * 4<u64>)
  sub-result = stats/sum(column: y - 10<u64>)
  #test += ["Add Column:Scalar u64"  57<u64>  sum-result
            "Mul Column:Scalar u64"  180<u64>  mul-result
            "Sub Column:Scalar u64"  15<u64>  sub-result]

Test column math with u128
  y = [14<u128>; 15<u128>; 16<u128>]
  sum-result = stats/sum(column: y + 4<u128>)
  mul-result = stats/sum(column: y * 4<u128>)
  sub-result = stats/sum(column: y - 10<u128>)
  #test += ["Add Column:Scalar u128"  57<u128>  sum-result
            "Mul Column:Scalar u128"  180<u128>  mul-result
            "Sub Column:Scalar u128"  15<u128>  sub-result]

Test column math with i8
  y = [4<i8>; 5<i8>; 6<i8>]
  sum-result = stats/sum(column: y + 4<i8>)
  mul-result = stats/sum(column: y * 4<i8>)
  sub-result = stats/sum(column: y - 4<i8>)
  #test += ["Add Column:Scalar i8"  27<i8>  sum-result
            "Mul Column:Scalar i8"  60<i8>  mul-result
            "Sub Column:Scalar i8"  3<i8>  sub-result]

Test column math with i16
  y = [4<i16>; 5<i16>; 6<i16>]
  sum-result = stats/sum(column: y + 4<i16>)
  mul-result = stats/sum(column: y * 4<i16>)
  sub-result = stats/sum(column: y - 4<i16>)
  #test += ["Add Column:Scalar i16"  27<i16>  sum-result
            "Mul Column:Scalar i16"  60<i16>  mul-result
            "Sub Column:Scalar i16"  3<i16>  sub-result]

Test column math with i32
  y = [4<i32>; 5<i32>; 6<i32>]
  sum-result = stats/sum(column: y + 4<i32>)
  mul-result = stats/sum(column: y * 4<i32>)
  sub-result = stats/sum(column: y - 4<i32>)
  #test += ["Add Column:Scalar i32"  27<i32>  sum-result
            "Mul Column:Scalar i32"  60<i32>  mul-result
            "Sub Column:Scalar i32"  3<i32>  sub-result]
      
Test column math with i64
  y = [4<i64>; 5<i64>; 6<i64>]
  sum-result = stats/sum(column: y + 4<i64>)
  mul-result = stats/sum(column: y * 4<i64>)
  sub-result = stats/sum(column: y - 4<i64>)
  #test += ["Add Column:Scalar i64"  27<i64>  sum-result
            "Mul Column:Scalar i64"  60<i64>  mul-result
            "Sub Column:Scalar i64"  3<i64>  sub-result]
      
Test column math with i128
  y = [4<i128>; 5<i128>; 6<i128>]
  sum-result = stats/sum(column: y + 4<i128>)
  mul-result = stats/sum(column: y * 4<i128>)
  sub-result = stats/sum(column: y - 4<i128>)
  #test += ["Add Column:Scalar i128"  27<i128>  sum-result
            "Mul Column:Scalar i128"  60<i128>  mul-result
            "Sub Column:Scalar i128"  3<i128>  sub-result]

Table : Table
----------------

Test table math with f32
  x = [1<f32> 2<f32>; 3<f32> 4<f32>]
  y = [1<f32> 2<f32>; 3<f32> 4<f32>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table f32"  20.0<f32>  sum-result
            "Mul Table:Table f32"  30.0<f32>  mul-result
            "Div Table:Table f32"  4.0<f32>  div-result
            "Sub Table:Table f32"  0.0<f32>  sub-result]

Test table math with f64
  x = [1<f64> 2<f64>; 3<f64> 4<f64>]
  y = [1<f64> 2<f64>; 3<f64> 4<f64>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table f64"  20.0<f64>  sum-result
            "Mul Table:Table f64"  30.0<f64>  mul-result
            "Div Table:Table f64"  4.0<f64>  div-result
            "Sub Table:Table f64"  0.0<f64>  sub-result]


Test table math with u8
  x = [1<u8> 2<u8>; 3<u8> 4<u8>]
  y = [1<u8> 2<u8>; 3<u8> 4<u8>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table u8"  20<u8>  sum-result
            "Mul Table:Table u8"  30<u8>  mul-result
            "Div Table:Table u8"  4<u8>  div-result
            "Sub Table:Table u8"  0<u8>  sub-result]



Test table math with u32
  x = [1<u32> 2<u32>; 3<u32> 4<u32>]
  y = [1<u32> 2<u32>; 3<u32> 4<u32>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table u32"  20<u32>  sum-result
            "Mul Table:Table u32"  30<u32>  mul-result
            "Div Table:Table u32"  4<u32>  div-result
            "Sub Table:Table u32"  0<u32>  sub-result]

Test table math with u64
  x = [1<u64> 2<u64>; 3<u64> 4<u64>]
  y = [1<u64> 2<u64>; 3<u64> 4<u64>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table u64"  20<u64>  sum-result
            "Mul Table:Table u64"  30<u64>  mul-result
            "Div Table:Table u64"  4<u64>  div-result
            "Sub Table:Table u64"  0<u64>  sub-result]
          
Test table math with u128
  x = [1<u128> 2<u128>; 3<u128> 4<u128>]
  y = [1<u128> 2<u128>; 3<u128> 4<u128>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table u128"  20<u128>  sum-result
            "Mul Table:Table u128"  30<u128>  mul-result
            "Div Table:Table u128"  4<u128>  div-result
            "Sub Table:Table u128"  0<u128>  sub-result]

Test table math with i8
  x = [1<i8> 2<i8>; 3<i8> 4<i8>]
  y = [1<i8> 2<i8>; 3<i8> 4<i8>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table i8"  20<i8>  sum-result
            "Mul Table:Table i8"  30<i8>  mul-result
            "Div Table:Table i8"  4<i8>  div-result
            "Sub Table:Table i8"  0<i8>  sub-result]

Test table math with i32
  x = [1<i32> 2<i32>; 3<i32> 4<i32>]
  y = [1<i32> 2<i32>; 3<i32> 4<i32>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table i32"  20<i32>  sum-result
            "Mul Table:Table i32"  30<i32>  mul-result
            "Div Table:Table i32"  4<i32>  div-result
            "Sub Table:Table i32"  0<i32>  sub-result]

Test table math with i64
  x = [1<i64> 2<i64>; 3<i64> 4<i64>]
  y = [1<i64> 2<i64>; 3<i64> 4<i64>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table i64"  20<i64>  sum-result
            "Mul Table:Table i64"  30<i64>  mul-result
            "Div Table:Table i64"  4<i64>  div-result
            "Sub Table:Table i64"  0<i64>  sub-result]
          
Test table math with i128
  x = [1<i128> 2<i128>; 3<i128> 4<i128>]
  y = [1<i128> 2<i128>; 3<i128> 4<i128>]
  sum = x + y
  mul = x * y
  div = x / y
  sub = x - y
  sum-result = stats/sum(table: sum)
  mul-result = stats/sum(table: mul)
  div-result = stats/sum(table: div)
  sub-result = stats/sum(table: sub)
  #test += ["Add Table:Table i128"  20<i128>  sum-result
            "Mul Table:Table i128"  30<i128>  mul-result
            "Div Table:Table i128"  4<i128>  div-result
            "Sub Table:Table i128"  0<i128>  sub-result]